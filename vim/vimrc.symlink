"*******************************************************************************
"Vim settings for @Patro
"*******************************************************************************

"install plugins
source ~/.vim/plugin/plugins.vim

"set encoding
if has('vim_starting') | set encoding=utf-8 nobomb | endif
scriptencoding utf-8

"make vim more useful
set nocompatible

"enable syntax highlighting
syntax on

"don't syntax highlight long lines
set synmaxcol=512

"enable file type detection, file type specific plugins and indenting
filetype plugin indent on

"reduce the redraw frequency
set lazyredraw

"remove timeout when hitting escape
set timeoutlen=1000 ttimeoutlen=0

"enable per-directory .vimrc files and disable unsafe commands in them
set exrc
set secure

"disable welcome screen
set shortmess+=I

"*******************************************************************************
"Display
"*******************************************************************************

set background=dark
:colorscheme solarized
highlight ColorColumn ctermbg=darkgray

"wintitle = filename - vim
set title

"this is already set by modern terminal
set ttyfast

"no beeps or flashes
set visualbell t_vb=
"turn off audible bells
set noerrorbells

"enable line numbers
set number
set numberwidth=5

"show context around current cursor position
set scrolloff=5
set sidescrolloff=10

"the line will be on column 120
set colorcolumn=120

"highlight current line
set cursorline

"show the cursor position
set ruler

"*******************************************************************************
"Tab line
"*******************************************************************************

"start OFF, toggle =2 to show tabline
set showtabline=0

"*******************************************************************************
"Status line
"*******************************************************************************

"always show status line
set laststatus=2

"*******************************************************************************
"Lightline
"*******************************************************************************
let g:lightline = {}

let g:lightline.component_expand = {
\   'linter_checking': 'lightline#ale#checking',
\   'linter_warnings': 'lightline#ale#warnings',
\   'linter_errors': 'lightline#ale#errors',
\   'linter_ok': 'lightline#ale#ok',
\ }

let g:lightline.component_type = {
\   'linter_checking': 'left',
\   'linter_warnings': 'warning',
\   'linter_errors': 'error',
\   'linter_ok': 'left',
\ }

let g:lightline.active = {
\ 'right': [
\   [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ],
\   [ 'lineinfo' ],
\   [ 'percent' ],
\   [ 'fileformat', 'fileencoding', 'filetype', 'charvaluehex' ]
\ ]}

"*******************************************************************************
"Command line
"*******************************************************************************

"show incomplete commands
set showcmd
"don't show -- INSERT -- in cmdline
set noshowmode

"*******************************************************************************
"Mouse
"*******************************************************************************

"enable mouse in all modes
set mouse=a

if !has('nvim') | set ttymouse=xterm2 | endif

"*******************************************************************************
"Wild menu
"*******************************************************************************

"browse files in same dir as open file
set browsedir=buffer
"enhanced command line completion.
set wildmenu
"complete files using a menu AND list
set wildmode=list:longest,full

set wildignorecase

set wildignore+=.git,.hg,.svn
set wildignore+=*/vendor/bundle/*,*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*,*.gem
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest,*.rbc,*.class
set wildignore+=*.ai,*.bmp,*.gif,*.ico,*.jpg,*.jpeg,*.png,*.psd,*.webp
set wildignore+=*.avi,*.m4a,*.mp3,*.oga,*.ogg,*.wav,*.webm
set wildignore+=*.eot,*.otf,*.ttf,*.woff
set wildignore+=*.doc,*.pdf
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
set wildignore+=*.swp,.lock,.DS_Store,._*
set wildignore+=*/node_modules/

"*******************************************************************************
"File saving
"*******************************************************************************

"reload files if they were edited elsewhere
set autoread

"end of line
set fileformats=unix,mac,dos
set fileformat=unix

"From https://github.com/swizzard/dotfiles/blob/master/.vimrc
"Don't keep .viminfo information for files in temporary directories or shared
"memory filesystems; this is because they're used as scratch spaces for tools
"like sudoedit(8) and pass(1) and hence could present a security problem
if !has('nvim') && has('viminfo')
  augroup dkoviminfo
    autocmd!
    silent! autocmd vimrc BufNewFile,BufReadPre
        \ /tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*,*/shm/*
        \ setlocal viminfo=
  augroup END
endif

"disable swap
set noswapfile

"backups
set backupskip=/tmp/*

"undo files
set undodir=~/.vim/undo/
set undofile
set undolevels=1000
set undoreload=10000

"*******************************************************************************
"Completion
"*******************************************************************************

"don't complete includes
set complete-=i
"don't complete tags
set complete-=t
"don't open scratch preview
set completeopt-=preview
"show PUM, even for one thing
set completeopt+=menu,menuone,noselect
"disable "Pattern not found" messages
set shortmess+=c

"*******************************************************************************
"Window splitting and buffers
"*******************************************************************************

set splitbelow
set splitright

"vertical sep between windows (unicode)
set fillchars=vert:│

"hide abandoned buffers
set hidden

"reveal already opened files from the quickfix window instead of opening new buffers
set switchbuf=useopen

"don't reset cursor to start of line when moving around
set nostartofline

"*******************************************************************************
"Code folding
"*******************************************************************************

set nofoldenable
set foldcolumn=2
"show all folds by default
set foldlevel=99
"show all folds by default
set foldlevelstart=99

"*******************************************************************************
"Special characters
"*******************************************************************************

set list
set listchars=
set listchars+=tab:→\
set listchars+=trail:·
"show cut off when nowrap
set listchars+=extends:→
set listchars+=precedes:←
set listchars+=nbsp:⣿

"*******************************************************************************
"Diffing
"*******************************************************************************

set fillchars+=diff:⣿
"use in vertical diff mode
set diffopt=vertical
"blank lines to keep sides aligned
set diffopt+=filler
"ignore whitespace changes
set diffopt+=iwhite

"*******************************************************************************
"Input auto-formatting
"*******************************************************************************

set formatoptions=
"auto-wrap comments using textwidth
set formatoptions+=c
"continue comments by default
set formatoptions+=r
"do not continue comment using o or O
set formatoptions-=o
"continue comments with gq
set formatoptions+=q
"auto-gq on type in comments?
set formatoptions-=a
"recognize numbered lists
set formatoptions+=n
"use indent from 2nd line of a paragraph
set formatoptions+=2
"break before 1-letter words
set formatoptions+=1
"no // comment when joining commented lines
set formatoptions+=j

"never use octal when <C-x> or <C-a>
set nrformats-=octal

"*******************************************************************************
"Indenting
"*******************************************************************************

"indent when creating newline
set autoindent

"for autoindent, use same spaces/tabs mix as previous line, even if
"tabs/spaces are mixed. Helps for docblock, where the block comments have a
"space after the indent to align asterisks
set copyindent

"try not to change the indent structure on "<<" and ">>" commands. I.e. keep
"block comments aligned with space if there is a space there.
set nopreserveindent

"smart detect when in braces and parens. Has annoying side effect that it
"won't indent lines beginning with '#'. Relying on syntax indentexpr instead.
set nosmartindent

"only needed for C-style code
set nocindent

"*******************************************************************************
"Whitespace
"*******************************************************************************

"don't wrap long lines
set nowrap
"J command doesn't add extra space
set nojoinspaces

"*******************************************************************************
"Tab
"*******************************************************************************

"use spaces instead of tabs
set expandtab
"softtabs are 2 spaces for expandtab
set shiftwidth=2
"negative = use same as shiftwidth
set softtabstop=-1

"make tabs as wide as two spaces
set tabstop=2

"use multiple of shiftwidth when shifting indent levels.
"this is OFF so block comments don't get fudged when using ">>" and "<<"
set noshiftround

"when on, a <Tab> in front of a line inserts blanks according to
"'shiftwidth'. 'tabstop' or 'softtabstop' is used in other places.
set smarttab

"bs can remove indentations, eol markers and text. http://vi.stackexchange.com/a/2163
set backspace=indent,eol,start

"*******************************************************************************
"Match and search
"*******************************************************************************

"tenths of a sec
set matchtime=1
"briefly jump to matching parens
set showmatch
"highlight matches
set hlsearch
"highlight dynamically as pattern is typed
set incsearch
"searches wrap around end of the file.
set wrapscan
"ignore case when searching
set ignorecase
"do not ignore case if uppercase char is used
set smartcase

"use silver searcher
if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ackprg = 'ag --vimgrep'
endif

"*******************************************************************************
"Special highlights
"*******************************************************************************

"misspellings
match ErrorMsg 'targett'
match ErrorMsg 'plugn'

"highlight VCS conflict markers
"@see {@link https://bitbucket.org/sjl/dotfiles/src/83aac563abc9d0116894ac61db2c63c9a05f72be/vim/vimrc?at=default&fileviewer=file-view-default#vimrc-233}
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

"*******************************************************************************
"Netrw
"*******************************************************************************
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

"*******************************************************************************
"NERDTree
"*******************************************************************************

"configure NERDTree
let NERDTreeShowHidden=1
nmap <C-n> :NERDTreeToggle<CR>
nmap <C-f> :NERDTreeFind<CR>

"*******************************************************************************
"ALE
"*******************************************************************************

let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0
let g:ale_linters = {
\  'ruby': ['standardrb', 'rubocop'],
\  'javascript': ['eslint'],
\}

"*******************************************************************************
"Key mappings
"*******************************************************************************

"set leader to space
let mapleader = "\<Space>"
"writes buffer if modified
map <Leader>w :update<CR>
"exit vim
map <Leader>q :quitall<CR>
"show git status
map <Leader>gs :Gstatus<CR>
"paste from os clipboard
map <Leader>p "*p
"yank to os clipboard
map <Leader>y "*y
"find file
noremap <C-p> :Files<CR>

"don't deselect visual block after indent/unindent
vnoremap < <gv
vnoremap > >gv

"shortcut for <CTRL> + hjkl to traverse windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"*******************************************************************************
"LaTeX
"*******************************************************************************

let g:Tex_UseMakefile=1
let g:Tex_Folding=0
let g:Tex_ViewRuleComplete_pdf = 'open build/$*.pdf'
let g:tex_flavor='latex'
let g:Tex_GotoError=0
imap <C-J> <Plug>IMAP_JumpForward
map <Leader>j <Plug>IMAP_JumpForward

"*******************************************************************************
"Other settings
"*******************************************************************************

"allows syntax highlighting support for JSX in regular javascript files
let g:jsx_ext_required = 0

"remove trailing whitespaces
fun! TrimWhitespace()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfun

autocmd FileType c,cpp,javascript,ruby autocmd BufWritePre <buffer> :call TrimWhitespace()
